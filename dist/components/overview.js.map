{"version":3,"sources":["../../src/components/overview.js"],"names":["config","appEvents","MonascaClient","_","OverviewPageCtrl","$scope","$injector","$location","$q","backendSrv","datasourceSrv","contextSrv","alertSrv","isOrgEditor","monasca","pageLoaded","loadFailed","totals","loadTotals","loadAlarmSets","countAlarms","then","col_count","data","columns","indexOf","col_state","OK","ALARM","UNDETERMINED","counts","forEach","count","row","state","catch","set","err","message","col_dim_name","col_dim_value","dim_name","dim_value","entities","fromPairs","Object","entries","map","entry","dim_counts","name","ok_count","alarm_count","undetermined_count","alarm_sets","title","dimension","service","hostname","templateUrl"],"mappings":"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","file":"overview.js","sourcesContent":["/*\n *   Copyright 2017 StackHPC\n *\n *   Licensed under the Apache License, Version 2.0 (the \"License\");\n *   you may not use this file except in compliance with the License.\n *   You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *   Unless required by applicable law or agreed to in writing, software\n *   distributed under the License is distributed on an \"AS IS\" BASIS,\n *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *   See the License for the specific language governing permissions and\n *   limitations under the License.\n */\n\nimport config from 'app/core/config';\nimport appEvents from 'app/core/app_events';\nimport MonascaClient from './monasca_client';\nimport _ from 'lodash';\n\nexport class OverviewPageCtrl {\n\n  /* * @ngInject */\n  constructor($scope, $injector, $location, $q, backendSrv, datasourceSrv, contextSrv, alertSrv) {\n    //this.isOrgEditor = contextSrv.hasRole('Editor') || contextSrv.hasRole('Admin');\n    this.isOrgEditor = true;\n    this.datasourceSrv = datasourceSrv;\n    this.alertSrv = alertSrv;\n    this.monasca = new MonascaClient(datasourceSrv);\n    this.backendSrv = backendSrv;\n    this.pageLoaded = false;\n    this.loadFailed = false;\n\n    this.totals = null;\n    this.loadTotals();\n    \n    this.loadAlarmSets();\n  }\n\n  loadTotals() {\n    this.monasca.countAlarms(['state']).then(data => {\n      var col_count = data.columns.indexOf('count');\n      var col_state = data.columns.indexOf('state');\n\n      var totals = {\n\tOK: 0,\n\tALARM: 0,\n\tUNDETERMINED: 0\n      }\n      data.counts.forEach(row => {\n\tvar count = row[col_count];\n\tvar state = row[col_state];\n\ttotals[state] = count;\n      });\n\n      this.totals = totals;\n      \n    }).catch(err => {\n      this.alertSrv.set(\"Failed to get alarm total counts.\", err.message, 'error', 10000);\n    });\n  }  \n\n  loadAlarmSets() {\n    this.monasca.countAlarms(['state', 'dimension_name', 'dimension_value']).then(data => {\n      var col_count = data.columns.indexOf('count');\n      var col_state = data.columns.indexOf('state');\n      var col_dim_name = data.columns.indexOf('dimension_name');\n      var col_dim_value = data.columns.indexOf('dimension_value');\n\n      var counts = {};\n      \n      data.counts.forEach(row => {\n\tvar dim_name = row[col_dim_name];\n\tvar dim_value = row[col_dim_value];\n\tcounts[dim_name] = counts[dim_name] || {};\n\tcounts[dim_name][dim_value] = counts[dim_name][dim_value] || {};\n\tcounts[dim_name][dim_value][row[col_state]] = row[col_count];\n      });\n\n      var entities = _.fromPairs(\n\tObject.entries(counts)\n\t  .map(([dim_name, entry]) => {\n\t    return [ dim_name, Object.entries(counts[dim_name])\n\t      .map(([dim_value, dim_counts]) => {\n\t\treturn {\n\t\t  name: dim_value,\n\t\t  ok_count: dim_counts.OK || 0,\n\t\t  alarm_count: dim_counts.ALARM || 0,\n\t\t  undetermined_count: dim_counts.UNDETERMINED || 0,\n\t\t};\n\t      }) ];\n\t  })\n      );\n\n      this.alarm_sets = [\n\t{ title: 'OpenStack Services',\n\t  dimension: 'service',\n\t  entities: entities.service },\n\t{ title: 'Hosts',\n\t  dimension: 'hostname',\n\t  entities: entities.hostname },\n      ];\n    \n    }).catch(err => {\n      this.alertSrv.set(\"Failed to get alarm counts.\", err.message, 'error', 10000);\n      this.loadFailed = true;\n    }).then(() => {\n      this.pageLoaded = true;\n    });\n  }\n\n}\n\nOverviewPageCtrl.templateUrl = 'components/overview.html';\n"]}