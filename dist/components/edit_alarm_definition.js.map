{"version":3,"sources":["../../src/components/edit_alarm_definition.js"],"names":["config","appEvents","MonascaClient","_","EditAlarmDefinitionPageCtrl","$scope","$injector","$location","$q","backendSrv","datasourceSrv","contextSrv","alertSrv","name","bootData","user","isOrgEditor","monasca","updating","updateFailed","id","search","savedAlarmDefinition","newAlarmDefinition","severity","saving","deleting","loadAlarmDefinition","suggestMatchBy","_suggestMatchBy","bind","query","callback","listDimensionNames","then","match_by","push","index","splice","getAlarmDefinition","pickKnownFields","alarm_definition","cloneDeep","catch","set","err","message","pick","patchAlarmDefinition","createAlarmDefinition","url","deleteAlarmDefinition","emit","title","text","text2","yesText","icon","onConfirm","confirmDeleteAlarmDefinition","templateUrl"],"mappings":"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","file":"edit_alarm_definition.js","sourcesContent":["/*\n *   Copyright 2017 StackHPC\n *\n *   Licensed under the Apache License, Version 2.0 (the \"License\");\n *   you may not use this file except in compliance with the License.\n *   You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *   Unless required by applicable law or agreed to in writing, software\n *   distributed under the License is distributed on an \"AS IS\" BASIS,\n *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *   See the License for the specific language governing permissions and\n *   limitations under the License.\n */\n\nimport config from 'app/core/config';\nimport appEvents from 'app/core/app_events';\nimport MonascaClient from './monasca_client';\nimport _ from 'lodash';\n\nexport class EditAlarmDefinitionPageCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $location, $q, backendSrv, datasourceSrv, contextSrv, alertSrv) {\n    this.name = config.bootData.user.name;\n    this.$location = $location;\n    //this.isOrgEditor = contextSrv.hasRole('Editor') || contextSrv.hasRole('Admin');\n    this.isOrgEditor = true;\n    this.alertSrv = alertSrv;\n    this.backendSrv = backendSrv;\n    this.$q = $q;\n\n    this.monasca = new MonascaClient(datasourceSrv);\n    \n    this.updating = true;\n    this.updateFailed = false;\n\n    this.id = null;\n    if ('id' in this.$location.search()) {\n      this.id = this.$location.search().id;\n    }\n\n    this.savedAlarmDefinition = {};\n    this.newAlarmDefinition = {\n      severity: 'LOW'\n    };\n    this.saving = false;\n    this.deleting = false;\n    this.loadAlarmDefinition();\n\n    this.suggestMatchBy = this._suggestMatchBy.bind(this);\n  }\n\n  // UI Elements\n \n  _suggestMatchBy(query, callback) {\n    this.monasca.listDimensionNames().then(callback);\n  }\n  \n  addMatchBy() {\n    if (!this.newAlarmDefinition.match_by) {\n      this.newAlarmDefinition.match_by = [];\n    }\n    this.newAlarmDefinition.match_by.push('');\n  }\n\n  removeMatchBy(index) {\n    if (!this.newAlarmDefinition.match_by) {\n      return;\n    }\n    this.newAlarmDefinition.match_by.splice(index, 1);\n  }\n\n  loadAlarmDefinition() {\n    if (!this.id) {\n      this.updating = false;\n      return;\n    }\n\n    this.monasca.getAlarmDefinition(this.id)\n      .then(alarm_definition => {\n\tthis.savedAlarmDefinition = this.pickKnownFields(alarm_definition);\n\tthis.newAlarmDefinition = _.cloneDeep(this.savedAlarmDefinition);\n      }).catch(err => {\n\tthis.alertSrv.set(\"Failed to get fetch alarm definition method.\", err.message, 'error', 10000);\n\tthis.updateFailed = true;\n      }).then(() => {\n\tthis.updating = false;\n      });\n  } \n\n  pickKnownFields(alarm_definition) {\n    return _.pick(alarm_definition,\n\t\t  ['name', 'description', 'expression', 'match_by', 'severity' ]);\n  }\n  \n  saveAlarmDefinition() {\n    this.saving = true;\n    \n    if (this.id) {\n      this.monasca.patchAlarmDefinition(this.id, this.newAlarmDefinition)\n\t.then(alarm_definition => {\n\t  this.savedAlarmDefinition = this.pickKnownFields(alarm_definition);\n\t}).catch(err => {\n\t  this.alertSrv.set(\"Failed to save alarm definition.\", err.message, 'error', 10000);\n\t}).then(() => {\n\t  this.saving = false;\n\t});\n    }\n    else {\n      this.monasca.createAlarmDefinition(this.newAlarmDefinition)\n\t.then(alarm_definition => {\n\t  this.savedAlarmDefinition = this.pickKnownFields(alarm_definition);\n\t  this.id = alarm_definition.id;\n\n\t  // Want the address bar to update. Don't really have to reload though.\n\t  this.$location.url('plugins/monasca-app/page/edit-alarm-definition?id=' + this.id);\n\t  \n\t}).catch(err => {\n\t  this.alertSrv.set(\"Failed to create alarm definition.\", err.message, 'error', 10000);\n\t}).then(() => {\n\t  this.saving = false;\n\t});\n    }\n  }\n  \n  confirmDeleteAlarmDefinition() {\n    this.deleting = true;\n    \n    this.monasca.deleteAlarmDefinition(this.id).then(() => {\n      this.$location.url('plugins/monasca-app/page/alarm_definitions');\n    }).catch(err => {\n      this.alertSrv.set(\"Failed to get delete alarm definition method.\", err.message, 'error', 10000);\n    }).then(() => {\n      this.deleting = false;\n    });\n  }\n\n  deleteAlarmDefinition() {\n    appEvents.emit('confirm-modal', {\n      title: 'Delete',\n      text: 'Are you sure you want to delete this alarm definition method?',\n      text2: this.savedAlarmDefinition.name,\n      yesText: \"Delete\",\n      icon: \"fa-trash\",\n      onConfirm: () => {\n        this.confirmDeleteAlarmDefinition();\n      }\n    });\n  }\n  \n}\n\nEditAlarmDefinitionPageCtrl.templateUrl = 'components/edit_alarm_definition.html';\n"]}