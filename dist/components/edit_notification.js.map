{"version":3,"sources":["../../src/components/edit_notification.js"],"names":["config","appEvents","MonascaClient","EditNotificationPageCtrl","$scope","$injector","$location","backendSrv","datasourceSrv","alertSrv","monasca","updating","updateFailed","id","search","savedNotification","newNotification","saving","deleting","notificationTypes","loadNotificationTypes","loadNotification","listNotificationTypes","then","types","type","_","first","catch","set","err","message","getNotification","name","notification","address","patchNotification","createNotification","url","deleteNotification","emit","title","text","text2","yesText","icon","onConfirm","confirmDeleteNotification","templateUrl"],"mappings":"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","file":"edit_notification.js","sourcesContent":["/*\n *   Copyright 2017 StackHPC\n *\n *   Licensed under the Apache License, Version 2.0 (the \"License\");\n *   you may not use this file except in compliance with the License.\n *   You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *   Unless required by applicable law or agreed to in writing, software\n *   distributed under the License is distributed on an \"AS IS\" BASIS,\n *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *   See the License for the specific language governing permissions and\n *   limitations under the License.\n */\n\nimport config from 'app/core/config';\nimport appEvents from 'app/core/app_events';\nimport MonascaClient from './monasca_client';\n\nexport class EditNotificationPageCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $location, backendSrv, datasourceSrv, alertSrv) {\n    this.$location = $location;\n    this.alertSrv = alertSrv;\n    this.monasca = new MonascaClient(backendSrv, datasourceSrv);\n    this.updating = true;\n    this.updateFailed = false;\n\n    this.id = null;\n    if ('id' in this.$location.search()) {\n      this.id = this.$location.search().id;\n    }\n\n    this.savedNotification = null;\n    this.newNotification = {}\n    this.saving = false;\n    this.deleting = false;\n    this.notificationTypes = [];\n    \n    this.loadNotificationTypes();\n    this.loadNotification();\n  }\n\n  loadNotificationTypes() {\n    this.monasca.listNotificationTypes().then(types => {\n      this.notificationTypes = types;\n      this.newNotification.type = _.first(this.notificationTypes)\n    }).catch(err => {\n      this.alertSrv.set(\"Failed to get fetch notification method types.\", err.message, 'error', 10000);\n    });\n  }\n  \n  loadNotification() {\n    if (!this.id) {\n      this.updating = false;\n      return;\n    }\n\n    this.monasca.getNotification(this.id)\n      .then(notification => {\n\tthis.savedNotification = {\n\t  name: notification.name,\n\t  type: notification.type,\n\t  address: notification.address\n\t};\n\tthis.newNotification = this.savedNotification;\n      }).catch(err => {\n\tthis.alertSrv.set(\"Failed to get fetch notification method.\", err.message, 'error', 10000);\n\tthis.updateFailed = true;\n      }).then(() => {\n\tthis.updating = false;\n      });\n  } \n\n  saveNotification() {\n    this.saving = true;\n    \n    if (this.id) {\n      this.monasca.patchNotification(this.id, this.newNotification)\n\t.then(notification => {\n\t  \n\t  this.savedNotification = {\n\t    name: notification.name,\n\t    type: notification.type,\n\t    address: notification.address\n\t  };\n\t  \n\t}).catch(err => {\n\t  this.alertSrv.set(\"Failed to get save notification method.\", err.message, 'error', 10000);\n\t}).then(() => {\n\t  this.saving = false;\n\t});\n    }\n    else {\n      this.monasca.createNotification(this.newNotification)\n\t.then(notification => {\n\t  this.savedNotification = {\n\t    name: notification.name,\n\t    type: notification.type,\n\t    address: notification.address\n\t  };\n\t  this.id = notification.id;\n\n\t  // Want the address bar to update. Don't really have to reload though.\n\t  this.$location.url('plugins/monasca-app/page/edit-notification?id=' + this.id);\n\t  \n\t}).catch(err => {\n\t  this.alertSrv.set(\"Failed to get create notification method.\", err.message, 'error', 10000);\n\t}).then(() => {\n\t  this.saving = false;\n\t});\n    }\n  }\n  \n  confirmDeleteNotification() {\n    this.deleting = true;\n    \n    this.monasca.deleteNotification(this.id).then(() => {\n      this.$location.url('plugins/monasca-app/page/notifications');\n    }).catch(err => {\n      this.alertSrv.set(\"Failed to get delete notification method.\", err.message, 'error', 10000);\n    }).then(() => {\n      this.deleting = false;\n    });\n  }\n\n  deleteNotification() {\n    appEvents.emit('confirm-modal', {\n      title: 'Delete',\n      text: 'Are you sure you want to delete this notification method?',\n      text2: this.savedNotification.name,\n      yesText: \"Delete\",\n      icon: \"fa-trash\",\n      onConfirm: () => {\n        this.confirmDeleteNotification();\n      }\n    });\n  }\n  \n}\n\nEditNotificationPageCtrl.templateUrl = 'components/edit_notification.html';\n"]}