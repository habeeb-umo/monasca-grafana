{"version":3,"sources":["../../src/components/paginator.js"],"names":["Paginator","service","GetPager","totalItems","currentPage","pageSize","totalPages","Math","ceil","startPage","endPage","startIndex","endIndex","min","pages","_","range"],"mappings":";;;;;AAAA,aAASA,SAAT,GAAqB;AACjB;AACA,YAAIC,UAAU,EAAd;;AAEAA,gBAAQC,QAAR,GAAmBA,QAAnB;;AAEA,eAAOD,OAAP;;AAEA;AACA,iBAASC,QAAT,CAAkBC,UAAlB,EAA8BC,WAA9B,EAA2CC,QAA3C,EAAqD;AACjD;AACAD,0BAAcA,eAAe,CAA7B;;AAEA;AACAC,uBAAWA,YAAY,EAAvB;;AAEA;AACA,gBAAIC,aAAaC,KAAKC,IAAL,CAAUL,aAAaE,QAAvB,CAAjB;;AAEA,gBAAII,SAAJ,EAAeC,OAAf;AACA,gBAAIJ,cAAc,EAAlB,EAAsB;AAClB;AACAG,4BAAY,CAAZ;AACAC,0BAAUJ,UAAV;AACH,aAJD,MAIO;AACH;AACA,oBAAIF,eAAe,CAAnB,EAAsB;AAClBK,gCAAY,CAAZ;AACAC,8BAAU,EAAV;AACH,iBAHD,MAGO,IAAIN,cAAc,CAAd,IAAmBE,UAAvB,EAAmC;AACtCG,gCAAYH,aAAa,CAAzB;AACAI,8BAAUJ,UAAV;AACH,iBAHM,MAGA;AACHG,gCAAYL,cAAc,CAA1B;AACAM,8BAAUN,cAAc,CAAxB;AACH;AACJ;;AAED;AACA,gBAAIO,aAAa,CAACP,cAAc,CAAf,IAAoBC,QAArC;AACA,gBAAIO,WAAWL,KAAKM,GAAL,CAASF,aAAaN,QAAb,GAAwB,CAAjC,EAAoCF,aAAa,CAAjD,CAAf;;AAEA;AACA,gBAAIW,QAAQC,EAAEC,KAAF,CAAQP,SAAR,EAAmBC,UAAU,CAA7B,CAAZ;;AAEA;AACA,mBAAO;AACHP,4BAAYA,UADT;AAEHC,6BAAaA,WAFV;AAGHC,0BAAUA,QAHP;AAIHC,4BAAYA,UAJT;AAKHG,2BAAWA,SALR;AAMHC,yBAASA,OANN;AAOHC,4BAAYA,UAPT;AAQHC,0BAAUA,QARP;AASHE,uBAAOA;AATJ,aAAP;AAWH;AACJ","file":"paginator.js","sourcesContent":["function Paginator() {\n    // service definition\n    var service = {};\n\n    service.GetPager = GetPager;\n\n    return service;\n\n    // service implementation\n    function GetPager(totalItems, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n\n        // default page size is 20\n        pageSize = pageSize || 20;\n\n        // calculate total pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        var pages = _.range(startPage, endPage + 1);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n}\n"]}